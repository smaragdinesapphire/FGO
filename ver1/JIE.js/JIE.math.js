/*
 * Jie.math為一些數學工具
 * 
 * @namespace Jie
 * @class math
 */
JIE.math = {
    /*
     * 檢查是否為整數。注意！字串型整數會回傳true。
     *
     * @method  isInteger
     * @param   {Number}    value 為要檢查的變數 
     * @return  {Boolean}   
     */
    isInteger: function (value) {
        var str;
        if (typeof value !== "string") {
           str = String(value);
        } else {
            str = value;
        }
        
        if (/[^0-9]/.test(str)) {
            return false;
        } else {
            return true;
        }
    },

    /*
     * 計算階層
     * 
     * @method  factorial
     * @param   {Number}    value 為要計算的數字 
     * @return  {Number}    引數之階層，若無階層則返回false
     */
    factorial: function (value) {        
        if (JIE.math.isInteger(Number(value))) {
            return calculate(value);
        } else {
            return false;
        }

        function calculate(value) {
            if (value === 0) {
                return 1;
            }
            return value * calculate(value - 1);
        }
    },

    /*
     * 計算排列組合
     * 
     * @method  c
     * @param   {Number}    n 總數 
     * @param   {Number}    n 取幾個
     * @return  {Number}    答案
     */
    c: function (n, m) {
        return this.factorial(n) / (this.factorial(m) * this.factorial(n - m));
    },
    rand: function test() {
        var table = [0.24509803921568626, 0.5098039215686274, 0.7941176470588235, 0.19607843137254902, 0.9607843137254902, 0.3431372549019608, 0.5686274509803921, 0.11764705882352941, 0.49019607843137253, 0.8921568627450981, 0.39215686274509803, 0.13725490196078433, 0.9117647058823529, 0.21568627450980393, 0.5294117647058824, 0.17647058823529413, 0.7156862745098039, 0.8431372549019608, 0.5, 0.28431372549019607, 0.6470588235294118, 0.37254901960784315, 0.9313725490196079, 0.10784313725490197, 0.5392156862745098, 0.3235294117647059, 0.35294117647058826, 0.4117647058823529, 0.23529411764705882, 0.049019607843137254, 0.8823529411764706, 0.6666666666666666, 0.14705882352941177, 0.3137254901960784, 0.4411764705882353, 0.0196078431372549, 0.43137254901960786, 0.09803921568627451, 0.29411764705882354, 0.4215686274509804, 0.9019607843137255, 0.5784313725490197, 0.8137254901960784, 0.7450980392156863, 0.5980392156862745, 0.18627450980392157, 0.6764705882352942, 0.30392156862745096, 0.0784313725490196, 0.20588235294117646, 0.00980392156862745, 0.5588235294117647, 0.6274509803921569, 0.3627450980392157, 0.5490196078431373, 0.0392156862745098, 0.3333333333333333, 0.058823529411764705, 0.9215686274509803, 0.45098039215686275, 0.803921568627451, 0.47058823529411764, 0.7745098039215687, 0.8627450980392157, 0.8529411764705882, 0.4803921568627451, 0.8725490196078431, 0.6372549019607843, 0.1568627450980392, 0.08823529411764706, 0.7058823529411765, 0.4019607843137255, 0.5196078431372549, 0.2549019607843137, 0.7647058823529411, 0.46078431372549017, 0.38235294117647056, 0.9803921568627451, 0.7843137254901961, 0.22549019607843138, 0.9705882352941176, 0.27450980392156865, 0.9411764705882353, 0.8333333333333334, 0.06862745098039216, 0.7254901960784313, 0.16666666666666666, 0.9509803921568627, 0.2647058823529412, 0.8235294117647058, 0.7352941176470589, 0.029411764705882353, 0.5882352941176471, 0.6176470588235294, 0.6078431372549019, 0.6862745098039216, 0.696078431372549, 0.6568627450980392, 0.7549019607843137, 0.12745098039215685];
        var index = 0, length = table.length;
        function callback() {
            if (index === length) index = 0;
            return table[index++];
        };
        return callback;
    },
}

if (rand === undefined) {
    var rand = JIE.math.rand();
}